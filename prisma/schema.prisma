// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @unique
  email String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Product {
  id                     String  @id @default(uuid())
  name                   String
  priceInCents           Int
  fileId                 String
  filePath               String
  imageId                String
  imageUrl               String
  description            String
  isAvailableForPurchase Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderId              String?
  order                Order[]
  downloadVerification DownloadVerification[]
}

model Order {
  id               String @id @default(uuid())
  pricePaidInCents Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id String @id @default(uuid())

  expiresAt DateTime

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}
